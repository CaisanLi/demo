### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type AggregateArticle {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type Article {
  author: User!
  content: String
  id: ID!
  pv: Int
  title: String!
}

type ArticleConnection {
  aggregate: AggregateArticle!
  edges: [ArticleEdge!]!
  pageInfo: PageInfo!
}

input ArticleCreateInput {
  author: UserCreateOneWithoutArticleInput!
  content: String
  id: ID
  title: String!
}

input ArticleCreateManyWithoutAuthorInput {
  connect: [ArticleWhereUniqueInput!]
  create: [ArticleCreateWithoutAuthorInput!]
}

input ArticleCreateWithoutAuthorInput {
  content: String
  id: ID
  title: String!
}

type ArticleEdge {
  cursor: String!
  node: Article!
}

enum ArticleOrderByInput {
  content_ASC
  content_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ArticleScalarWhereInput {
  AND: [ArticleScalarWhereInput!]
  content: String
  content_contains: String
  content_ends_with: String
  content_gt: String
  content_gte: String
  content_in: [String!]
  content_lt: String
  content_lte: String
  content_not: String
  content_not_contains: String
  content_not_ends_with: String
  content_not_in: [String!]
  content_not_starts_with: String
  content_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [ArticleScalarWhereInput!]
  OR: [ArticleScalarWhereInput!]
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
}

input ArticleUpdateInput {
  author: UserUpdateOneRequiredWithoutArticleInput
  content: String
  title: String
}

input ArticleUpdateManyDataInput {
  content: String
  title: String
}

input ArticleUpdateManyWithoutAuthorInput {
  connect: [ArticleWhereUniqueInput!]
  create: [ArticleCreateWithoutAuthorInput!]
  delete: [ArticleWhereUniqueInput!]
  deleteMany: [ArticleScalarWhereInput!]
  disconnect: [ArticleWhereUniqueInput!]
  set: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ArticleUpdateManyWithWhereNestedInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ArticleUpdateManyWithWhereNestedInput {
  data: ArticleUpdateManyDataInput!
  where: ArticleScalarWhereInput!
}

input ArticleUpdateWithoutAuthorDataInput {
  content: String
  title: String
}

input ArticleUpdateWithWhereUniqueWithoutAuthorInput {
  data: ArticleUpdateWithoutAuthorDataInput!
  where: ArticleWhereUniqueInput!
}

input ArticleUpsertWithWhereUniqueWithoutAuthorInput {
  create: ArticleCreateWithoutAuthorInput!
  update: ArticleUpdateWithoutAuthorDataInput!
  where: ArticleWhereUniqueInput!
}

input ArticleWhereInput {
  AND: [ArticleWhereInput!]
  author: UserWhereInput
  content: String
  content_contains: String
  content_ends_with: String
  content_gt: String
  content_gte: String
  content_in: [String!]
  content_lt: String
  content_lte: String
  content_not: String
  content_not_contains: String
  content_not_ends_with: String
  content_not_in: [String!]
  content_not_starts_with: String
  content_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [ArticleWhereInput!]
  OR: [ArticleWhereInput!]
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
}

input ArticleWhereUniqueInput {
  id: ID
}

type Mutation {
  createArticle(data: ArticleCreateInput!): Article!
  createUser(data: UserCreateInput!): User!
  updateArticle(data: ArticleUpdateInput!, where: ArticleWhereUniqueInput!): Article
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  article(where: ArticleWhereUniqueInput!): Article
  articles(after: String, before: String, first: Int, last: Int, orderBy: ArticleOrderByInput, skip: Int, where: ArticleWhereInput): [Article!]!
  articlesConnection(after: String, before: String, first: Int, last: Int, orderBy: ArticleOrderByInput, skip: Int, where: ArticleWhereInput): ArticleConnection!
  user(where: UserWhereUniqueInput!): User
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
  usersConnection(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): UserConnection!
}

type User {
  article(after: String, before: String, first: Int, last: Int, orderBy: ArticleOrderByInput, skip: Int, where: ArticleWhereInput): [Article!]
  id: ID!
  name: String!
}

type UserConnection {
  aggregate: AggregateUser!
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

input UserCreateInput {
  article: ArticleCreateManyWithoutAuthorInput
  id: ID
  name: String!
  password: String!
}

input UserCreateOneWithoutArticleInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutArticleInput
}

input UserCreateWithoutArticleInput {
  id: ID
  name: String!
  password: String!
}

type UserEdge {
  cursor: String!
  node: User!
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  password_ASC
  password_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserUpdateInput {
  article: ArticleUpdateManyWithoutAuthorInput
  name: String
  password: String
}

input UserUpdateOneRequiredWithoutArticleInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutArticleInput
  update: UserUpdateWithoutArticleDataInput
  upsert: UserUpsertWithoutArticleInput
}

input UserUpdateWithoutArticleDataInput {
  name: String
  password: String
}

input UserUpsertWithoutArticleInput {
  create: UserCreateWithoutArticleInput!
  update: UserUpdateWithoutArticleDataInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  article_every: ArticleWhereInput
  article_none: ArticleWhereInput
  article_some: ArticleWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
}

input UserWhereUniqueInput {
  id: ID
}
